# Application Name
spring.application.name=observator

# H2 저장소 필요시 위의 두 단락 주석 처리
# SQL 저장소 사용시 가장 아래의 단락 주석 처리, ObservatorAplication의 코드 추가 주석 처리

# AWS RDS configuration
# spring.datasource.url=jdbc:mysql://observator-db.cb264qq6c28g.ap-northeast-2.rds.amazonaws.com:3306/observatordb?serverTimezone=Asia/Seoul
# spring.datasource.username=admin
# spring.datasource.password=observator
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA configuration
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Seoul

# Security-related configuration
spring.security.user.name=admin
spring.security.user.password=admin

# Server configuration
server.address=0.0.0.0
server.port=8080
server.ssl.enabled=false
server.forward-headers-strategy=framework

# OAuth2 Google Login configuration
spring.security.oauth2.client.registration.google.client-id=1052925642956-2550ukjm4u2qms261ukbl189hncdngfd.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=https://observator.ngrok.dev/home

# SMTP configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=observatoremail@gmail.com
spring.mail.password=cozrwsvjxrmghgtv
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Commenting out H2 configuration to prevent conflicts with MySQL
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
