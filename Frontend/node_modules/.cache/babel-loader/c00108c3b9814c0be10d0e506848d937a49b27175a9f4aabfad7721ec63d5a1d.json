{"ast":null,"code":"var _jsxFileName = \"/Users/lee-boseong/happy-coin/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [price, setPrice] = useState(null); // 비트코인 가격을 저장할 곳\n\n  useEffect(() => {\n    const fetchPrice = async () => {\n      const response = await fetch('https://api.binance.com/api/v3/ticker/price?symbol=BTCUSDT');\n      const data = await response.json();\n      setPrice(data.price); // 비트코인 가격을 저장해\n    };\n    fetchPrice(); // 웹사이트가 처음 열릴 때 비트코인 가격을 받아와\n    const interval = setInterval(fetchPrice, 5000); // 5초마다 새로운 가격을 받아와\n    return () => clearInterval(interval); // 웹사이트가 닫히면 5초마다 받아오는 걸 멈춰\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bitcoin Price Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Current Price: \", price ? `$${price}` : \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"62Jo7Iy5s88co3OObn+ySe3cK0U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","price","setPrice","fetchPrice","response","fetch","data","json","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lee-boseong/happy-coin/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [price, setPrice] = useState(null);  // 비트코인 가격을 저장할 곳\n\n  useEffect(() => {\n    const fetchPrice = async () => {\n      const response = await fetch('https://api.binance.com/api/v3/ticker/price?symbol=BTCUSDT');\n      const data = await response.json();\n      setPrice(data.price);  // 비트코인 가격을 저장해\n    };\n\n    fetchPrice();  // 웹사이트가 처음 열릴 때 비트코인 가격을 받아와\n    const interval = setInterval(fetchPrice, 5000);  // 5초마다 새로운 가격을 받아와\n    return () => clearInterval(interval);  // 웹사이트가 닫히면 5초마다 받아오는 걸 멈춰\n  }, []);\n\n  return (\n    <div>\n      <h1>Bitcoin Price Tracker</h1>\n      <h2>Current Price: {price ? `$${price}` : \"Loading...\"}</h2>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAE3CC,SAAS,CAAC,MAAM;IACd,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4DAA4D,CAAC;MAC1F,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,QAAQ,CAACI,IAAI,CAACL,KAAK,CAAC,CAAC,CAAE;IACzB,CAAC;IAEDE,UAAU,CAAC,CAAC,CAAC,CAAE;IACf,MAAMK,QAAQ,GAAGC,WAAW,CAACN,UAAU,EAAE,IAAI,CAAC,CAAC,CAAE;IACjD,OAAO,MAAMO,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAE;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BjB,OAAA;MAAAa,QAAA,GAAI,iBAAe,EAACV,KAAK,GAAG,IAAIA,KAAK,EAAE,GAAG,YAAY;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV;AAACf,EAAA,CArBQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAuBZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}