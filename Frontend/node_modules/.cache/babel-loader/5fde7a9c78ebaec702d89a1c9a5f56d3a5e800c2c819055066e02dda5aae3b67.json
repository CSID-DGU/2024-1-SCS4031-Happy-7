{"ast":null,"code":"var _jsxFileName = \"/Users/lee-boseong/happy-coin/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, BarElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [priceData, setPriceData] = useState([]);\n  const [timeData, setTimeData] = useState([]);\n  const [volumeData, setVolumeData] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n  const [tradeHistory, setTradeHistory] = useState([]);\n  const [trend, setTrend] = useState('상승세'); // 초기값은 상승세로 설정\n\n  useEffect(() => {\n    const fetchDummyData = () => {\n      // 더미 가격 및 거래량 생성\n      const dummyPrice = (Math.random() * (60000 - 50000) + 50000).toFixed(2);\n      const dummyVolume = (Math.random() * 100).toFixed(2);\n      const currentTime = new Date().toLocaleTimeString();\n      setPriceData(prevPriceData => [...prevPriceData, dummyPrice]);\n      setTimeData(prevTimeData => [...prevTimeData, currentTime]);\n      setVolumeData(prevVolumeData => [...prevVolumeData, dummyVolume]);\n\n      // 최근 5개의 가격을 기반으로 트렌드 분석\n      const recentPrices = [...priceData, dummyPrice].slice(-5); // 최근 5개 데이터\n      const priceDifference = recentPrices[recentPrices.length - 1] - recentPrices[0];\n      setTrend(priceDifference > 0 ? '상승세' : '하락세');\n\n      // 가격이 59000 이상이면 알림 추가\n      if (dummyPrice > 59000) {\n        setAlerts(prevAlerts => [...prevAlerts, `High Price Alert: $${dummyPrice} at ${currentTime}`]);\n      }\n\n      // 더미 거래 기록 생성\n      const dummyTrade = {\n        price: dummyPrice,\n        volume: dummyVolume,\n        time: currentTime\n      };\n      setTradeHistory(prevHistory => {\n        const updatedHistory = [...prevHistory, dummyTrade];\n        return updatedHistory.length > 15 ? updatedHistory.slice(-15) : updatedHistory;\n      });\n    };\n    fetchDummyData();\n    const interval = setInterval(fetchDummyData, 2000);\n    return () => clearInterval(interval);\n  }, [priceData]);\n  const priceChartData = {\n    labels: timeData,\n    datasets: [{\n      label: 'Bitcoin Price',\n      data: priceData,\n      fill: false,\n      borderColor: 'blue',\n      tension: 0.1\n    }]\n  };\n  const volumeChartData = {\n    labels: timeData,\n    datasets: [{\n      label: 'Bitcoin Volume',\n      data: volumeData,\n      backgroundColor: 'green'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bitcoin Tracker with Dummy Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chartContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Bitcoin Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: priceChartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.volumeChartContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Bitcoin Volume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: volumeChartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.tradeAndTrendContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.tableContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Trade History (Dummy) - Latest 15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          cellPadding: \"10\",\n          cellSpacing: \"0\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price (USD)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Volume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tradeHistory.map((trade, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: trade.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: trade.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: trade.volume\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.trendContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Current Trend: \", trend]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uCD5C\\uADFC 5\\uAC1C\\uC758 \\uAC00\\uACA9\\uC744 \\uAE30\\uBC18\\uC73C\\uB85C \\uBD84\\uC11D\\uB41C \\uACB0\\uACFC: \", trend]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"z/HRMZeC2V3BsHbD5k3P/H/5nzU=\");\n_c = App;\nconst styles = {\n  chartContainer: {\n    minWidth: '300px',\n    // 최소 너비 설정\n    marginBottom: '20px' // 작은 화면에서 테이블 아래로 배치될 때 간격 추가\n  },\n  volumeChartContainer: {\n    marginBottom: '20px'\n  },\n  tradeAndTrendContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginTop: '20px'\n  },\n  tableContainer: {\n    flex: 2,\n    // 더 넓게 설정\n    minWidth: '300px',\n    // 최소 너비 설정\n    marginRight: '20px'\n  },\n  trendContainer: {\n    flex: 1,\n    // 오른쪽에 좁게 설정\n    padding: '10px',\n    backgroundColor: '#f0f0f0',\n    borderRadius: '8px',\n    minWidth: '200px'\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Line","Bar","Chart","ChartJS","CategoryScale","LinearScale","PointElement","BarElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","App","_s","priceData","setPriceData","timeData","setTimeData","volumeData","setVolumeData","alerts","setAlerts","tradeHistory","setTradeHistory","trend","setTrend","fetchDummyData","dummyPrice","Math","random","toFixed","dummyVolume","currentTime","Date","toLocaleTimeString","prevPriceData","prevTimeData","prevVolumeData","recentPrices","slice","priceDifference","length","prevAlerts","dummyTrade","price","volume","time","prevHistory","updatedHistory","interval","setInterval","clearInterval","priceChartData","labels","datasets","label","data","fill","borderColor","tension","volumeChartData","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","chartContainer","volumeChartContainer","tradeAndTrendContainer","tableContainer","border","cellPadding","cellSpacing","map","trade","index","trendContainer","_c","minWidth","marginBottom","display","justifyContent","alignItems","marginTop","flex","marginRight","padding","borderRadius","$RefreshReg$"],"sources":["/Users/lee-boseong/happy-coin/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  BarElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\n\nfunction App() {\n  const [priceData, setPriceData] = useState([]);\n  const [timeData, setTimeData] = useState([]);\n  const [volumeData, setVolumeData] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n  const [tradeHistory, setTradeHistory] = useState([]);\n  const [trend, setTrend] = useState('상승세'); // 초기값은 상승세로 설정\n\n  useEffect(() => {\n    const fetchDummyData = () => {\n      // 더미 가격 및 거래량 생성\n      const dummyPrice = (Math.random() * (60000 - 50000) + 50000).toFixed(2);\n      const dummyVolume = (Math.random() * 100).toFixed(2);\n      const currentTime = new Date().toLocaleTimeString();\n\n      setPriceData((prevPriceData) => [...prevPriceData, dummyPrice]);\n      setTimeData((prevTimeData) => [...prevTimeData, currentTime]);\n      setVolumeData((prevVolumeData) => [...prevVolumeData, dummyVolume]);\n\n      // 최근 5개의 가격을 기반으로 트렌드 분석\n      const recentPrices = [...priceData, dummyPrice].slice(-5);  // 최근 5개 데이터\n      const priceDifference = recentPrices[recentPrices.length - 1] - recentPrices[0];\n      setTrend(priceDifference > 0 ? '상승세' : '하락세');\n\n      // 가격이 59000 이상이면 알림 추가\n      if (dummyPrice > 59000) {\n        setAlerts((prevAlerts) => [...prevAlerts, `High Price Alert: $${dummyPrice} at ${currentTime}`]);\n      }\n\n      // 더미 거래 기록 생성\n      const dummyTrade = {\n        price: dummyPrice,\n        volume: dummyVolume,\n        time: currentTime,\n      };\n      setTradeHistory((prevHistory) => {\n        const updatedHistory = [...prevHistory, dummyTrade];\n        return updatedHistory.length > 15 ? updatedHistory.slice(-15) : updatedHistory;\n      });\n    };\n\n    fetchDummyData();\n    const interval = setInterval(fetchDummyData, 2000);\n    return () => clearInterval(interval);\n  }, [priceData]);\n\n  const priceChartData = {\n    labels: timeData,\n    datasets: [\n      {\n        label: 'Bitcoin Price',\n        data: priceData,\n        fill: false,\n        borderColor: 'blue',\n        tension: 0.1,\n      },\n    ],\n  };\n\n  const volumeChartData = {\n    labels: timeData,\n    datasets: [\n      {\n        label: 'Bitcoin Volume',\n        data: volumeData,\n        backgroundColor: 'green',\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <h1>Bitcoin Tracker with Dummy Data</h1>\n\n      {/* 비트코인 트래커 */}\n      <div style={styles.chartContainer}>\n        <h2>Bitcoin Price</h2>\n        <Line data={priceChartData} />\n      </div>\n\n      {/* 비트코인 거래량 차트 */}\n      <div style={styles.volumeChartContainer}>\n        <h2>Bitcoin Volume</h2>\n        <Bar data={volumeChartData} />\n      </div>\n\n      {/* Trade History와 Current Trend 나란히 배치 */}\n      <div style={styles.tradeAndTrendContainer}>\n        {/* 거래 기록 테이블 */}\n        <div style={styles.tableContainer}>\n          <h2>Trade History (Dummy) - Latest 15</h2>\n          <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\">\n            <thead>\n              <tr>\n                <th>Time</th>\n                <th>Price (USD)</th>\n                <th>Volume</th>\n              </tr>\n            </thead>\n            <tbody>\n              {tradeHistory.map((trade, index) => (\n                <tr key={index}>\n                  <td>{trade.time}</td>\n                  <td>{trade.price}</td>\n                  <td>{trade.volume}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        {/* 비트코인 트렌드 분석 */}\n        <div style={styles.trendContainer}>\n          <h2>Current Trend: {trend}</h2>\n          <p>최근 5개의 가격을 기반으로 분석된 결과: {trend}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  chartContainer: {\n    minWidth: '300px', // 최소 너비 설정\n    marginBottom: '20px', // 작은 화면에서 테이블 아래로 배치될 때 간격 추가\n  },\n  volumeChartContainer: {\n    marginBottom: '20px',\n  },\n  tradeAndTrendContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginTop: '20px',\n  },\n  tableContainer: {\n    flex: 2, // 더 넓게 설정\n    minWidth: '300px', // 최소 너비 설정\n    marginRight: '20px',\n  },\n  trendContainer: {\n    flex: 1, // 오른쪽에 좁게 설정\n    padding: '10px',\n    backgroundColor: '#f0f0f0',\n    borderRadius: '8px',\n    minWidth: '200px',\n  },\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}