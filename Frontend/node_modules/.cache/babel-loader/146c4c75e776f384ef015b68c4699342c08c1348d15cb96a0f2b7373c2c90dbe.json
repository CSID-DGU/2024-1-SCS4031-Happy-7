{"ast":null,"code":"var _jsxFileName = \"/Users/lee-boseong/2024-2-SCS4031-Happy-7/Frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, BarElement, LineElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [priceData, setPriceData] = useState([]);\n  const [timeData, setTimeData] = useState([]);\n  const [volumeData, setVolumeData] = useState([]);\n  const [tradeHistory, setTradeHistory] = useState([]);\n  const [trend, setTrend] = useState('상승세');\n  const [totalProfit, setTotalProfit] = useState(5000);\n  const [previousProfit, setPreviousProfit] = useState(5000);\n  const [profitChange, setProfitChange] = useState(0);\n  const [isProfitIncreasing, setIsProfitIncreasing] = useState(true);\n  const [accuracy, setAccuracy] = useState(85);\n  const [profitRate, setProfitRate] = useState(20);\n  useEffect(() => {\n    const fetchDummyData = () => {\n      const dummyPrice = (Math.random() * (60000 - 50000) + 50000).toFixed(2);\n      const dummyVolume = (Math.random() * 100).toFixed(2);\n      const currentTime = new Date().toLocaleTimeString();\n      setProfitRate(Math.floor(Math.random() * 100));\n      setAccuracy(Math.floor(Math.random() * 100));\n      const newProfit = totalProfit + Math.floor(Math.random() * 200 - 100);\n      setPreviousProfit(totalProfit);\n      setTotalProfit(newProfit);\n      const change = newProfit - previousProfit;\n      setProfitChange(change);\n      setIsProfitIncreasing(change >= 0);\n      setPriceData(prevPriceData => [...prevPriceData, dummyPrice].slice(-20)); // 10개 데이터만 유지\n      setTimeData(prevTimeData => [...prevTimeData, currentTime].slice(-10)); // 10개 시간 데이터만 유지\n      setVolumeData(prevVolumeData => [...prevVolumeData, dummyVolume].slice(-10));\n      const newTrade = {\n        time: currentTime,\n        price: dummyPrice,\n        volume: dummyVolume,\n        action: Math.random() > 0.5 ? 'Buy' : 'Sell',\n        result: Math.random() > 0.5 ? 'Win' : 'Lose'\n      };\n      setTradeHistory(prevHistory => {\n        const updatedHistory = [...prevHistory, newTrade];\n        return updatedHistory.length > 15 ? updatedHistory.slice(-15) : updatedHistory;\n      });\n      const recentPrices = [...priceData, dummyPrice].slice(-5);\n      const priceDifference = recentPrices[recentPrices.length - 1] - recentPrices[0];\n      setTrend(priceDifference > 0 ? '상승세' : '하락세');\n    };\n\n    // 주기가 10초로 정확히 작동하도록 하기 위해 의존성을 없앰\n    const interval = setInterval(fetchDummyData, 300); // 1초(10000ms) 간격으로 데이터 갱신\n    return () => clearInterval(interval);\n  }, []); // 빈 의존성 배열로 설정해 10초마다만 작동\n\n  const priceChartData = {\n    labels: timeData,\n    datasets: [{\n      label: 'Bitcoin Price',\n      data: priceData,\n      fill: false,\n      borderColor: 'blue',\n      tension: 0.4,\n      borderWidth: 1\n    }]\n  };\n  const volumeChartData = {\n    labels: timeData,\n    datasets: [{\n      label: 'Bitcoin Volume',\n      data: volumeData,\n      backgroundColor: 'green'\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        ticks: {\n          maxTicksLimit: 5\n        }\n      }\n    }\n  };\n  const profitRateData = {\n    labels: ['Profit', 'Loss'],\n    datasets: [{\n      label: 'Profit Rate',\n      data: [profitRate, 100 - profitRate],\n      backgroundColor: ['#4caf50', '#f44336'],\n      hoverOffset: 4\n    }]\n  };\n  const accuracyData = {\n    labels: ['Accuracy', 'Error'],\n    datasets: [{\n      label: 'Prediction Accuracy',\n      data: [accuracy, 100 - accuracy],\n      backgroundColor: ['#2196f3', '#ff9800'],\n      hoverOffset: 4\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bitcoin Tracker with Dummy Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.totalProfit,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: styles.fixedProfit,\n          children: [\"Total Profit: $\", totalProfit.toLocaleString(), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: isProfitIncreasing ? 'green' : 'red'\n            },\n            children: isProfitIncreasing ? ` (+${profitChange}) ↑` : ` (${profitChange}) ↓`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.column,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Bitcoin Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: priceChartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Bitcoin Volume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: volumeChartData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.column,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Trade History (Dummy) - Latest 15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          cellPadding: \"10\",\n          cellSpacing: \"0\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price (USD)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Volume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Result\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tradeHistory.map((trade, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: trade.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: trade.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: trade.volume\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: trade.action\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: trade.result\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.column,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Current Trend: \", trend]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uCD5C\\uADFC 5\\uAC1C\\uC758 \\uAC00\\uACA9\\uC744 \\uAE30\\uBC18\\uC73C\\uB85C \\uBD84\\uC11D\\uB41C \\uACB0\\uACFC: \", trend]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Profit Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.chartWrapper,\n          children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n            data: profitRateData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.chartText,\n            children: [profitRate, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Prediction Accuracy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.chartWrapper,\n          children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n            data: accuracyData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.chartText,\n            children: [accuracy, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jc1DI/fegSa0ga4jktcdTQR99oY=\");\n_c = App;\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingBottom: '20px',\n    borderBottom: '2px solid #ccc'\n  },\n  totalProfit: {\n    fontSize: '24px',\n    fontWeight: 'bold'\n  },\n  fixedProfit: {\n    display: 'inline-block',\n    width: '200px',\n    textAlign: 'right'\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    flexWrap: 'wrap'\n  },\n  column: {\n    flex: 1,\n    minWidth: '300px',\n    marginRight: '10px',\n    marginBottom: '20px'\n  },\n  chartWrapper: {\n    position: 'relative',\n    width: '300px',\n    height: '300px',\n    margin: '0 auto'\n  },\n  chartText: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    fontSize: '24px',\n    fontWeight: 'bold'\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Line","Bar","Doughnut","Chart","ChartJS","CategoryScale","LinearScale","PointElement","BarElement","LineElement","ArcElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","App","_s","priceData","setPriceData","timeData","setTimeData","volumeData","setVolumeData","tradeHistory","setTradeHistory","trend","setTrend","totalProfit","setTotalProfit","previousProfit","setPreviousProfit","profitChange","setProfitChange","isProfitIncreasing","setIsProfitIncreasing","accuracy","setAccuracy","profitRate","setProfitRate","fetchDummyData","dummyPrice","Math","random","toFixed","dummyVolume","currentTime","Date","toLocaleTimeString","floor","newProfit","change","prevPriceData","slice","prevTimeData","prevVolumeData","newTrade","time","price","volume","action","result","prevHistory","updatedHistory","length","recentPrices","priceDifference","interval","setInterval","clearInterval","priceChartData","labels","datasets","label","data","fill","borderColor","tension","borderWidth","volumeChartData","backgroundColor","options","scales","x","ticks","maxTicksLimit","profitRateData","hoverOffset","accuracyData","children","style","styles","header","fileName","_jsxFileName","lineNumber","columnNumber","fixedProfit","toLocaleString","color","container","column","border","cellPadding","cellSpacing","map","trade","index","chartWrapper","chartText","_c","display","justifyContent","alignItems","paddingBottom","borderBottom","fontSize","fontWeight","width","textAlign","flexDirection","flexWrap","flex","minWidth","marginRight","marginBottom","position","height","margin","top","left","transform","$RefreshReg$"],"sources":["/Users/lee-boseong/2024-2-SCS4031-Happy-7/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  BarElement,\n  LineElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\n\nfunction App() {\n  const [priceData, setPriceData] = useState([]);\n  const [timeData, setTimeData] = useState([]);\n  const [volumeData, setVolumeData] = useState([]);\n  const [tradeHistory, setTradeHistory] = useState([]);\n  const [trend, setTrend] = useState('상승세');\n  const [totalProfit, setTotalProfit] = useState(5000);\n  const [previousProfit, setPreviousProfit] = useState(5000);\n  const [profitChange, setProfitChange] = useState(0);\n  const [isProfitIncreasing, setIsProfitIncreasing] = useState(true);\n  const [accuracy, setAccuracy] = useState(85);\n  const [profitRate, setProfitRate] = useState(20);\n\n  useEffect(() => {\n    const fetchDummyData = () => {\n      const dummyPrice = (Math.random() * (60000 - 50000) + 50000).toFixed(2);\n      const dummyVolume = (Math.random() * 100).toFixed(2);\n      const currentTime = new Date().toLocaleTimeString();\n  \n      setProfitRate(Math.floor(Math.random() * 100));\n      setAccuracy(Math.floor(Math.random() * 100));\n  \n      const newProfit = totalProfit + Math.floor(Math.random() * 200 - 100);\n      setPreviousProfit(totalProfit);\n      setTotalProfit(newProfit);\n  \n      const change = newProfit - previousProfit;\n      setProfitChange(change);\n      setIsProfitIncreasing(change >= 0);\n  \n      setPriceData((prevPriceData) => [...prevPriceData, dummyPrice].slice(-20)); // 10개 데이터만 유지\n      setTimeData((prevTimeData) => [...prevTimeData, currentTime].slice(-10)); // 10개 시간 데이터만 유지\n      setVolumeData((prevVolumeData) => [...prevVolumeData, dummyVolume].slice(-10));\n  \n      const newTrade = {\n        time: currentTime,\n        price: dummyPrice,\n        volume: dummyVolume,\n        action: Math.random() > 0.5 ? 'Buy' : 'Sell',\n        result: Math.random() > 0.5 ? 'Win' : 'Lose',\n      };\n      setTradeHistory((prevHistory) => {\n        const updatedHistory = [...prevHistory, newTrade];\n        return updatedHistory.length > 15 ? updatedHistory.slice(-15) : updatedHistory;\n      });\n  \n      const recentPrices = [...priceData, dummyPrice].slice(-5);\n      const priceDifference = recentPrices[recentPrices.length - 1] - recentPrices[0];\n      setTrend(priceDifference > 0 ? '상승세' : '하락세');\n    };\n    \n    // 주기가 10초로 정확히 작동하도록 하기 위해 의존성을 없앰\n    const interval = setInterval(fetchDummyData, 300); // 1초(10000ms) 간격으로 데이터 갱신\n    return () => clearInterval(interval);\n  }, []); // 빈 의존성 배열로 설정해 10초마다만 작동\n\n  const priceChartData = {\n    labels: timeData,\n    datasets: [\n      {\n        label: 'Bitcoin Price',\n        data: priceData,\n        fill: false,\n        borderColor: 'blue',\n        tension: 0.4,\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const volumeChartData = {\n    labels: timeData,\n    datasets: [\n      {\n        label: 'Bitcoin Volume',\n        data: volumeData,\n        backgroundColor: 'green',\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      x: {\n        ticks: {\n          maxTicksLimit: 5,\n        },\n      },\n    },\n  };\n\n  const profitRateData = {\n    labels: ['Profit', 'Loss'],\n    datasets: [\n      {\n        label: 'Profit Rate',\n        data: [profitRate, 100 - profitRate],\n        backgroundColor: ['#4caf50', '#f44336'],\n        hoverOffset: 4,\n      },\n    ],\n  };\n\n  const accuracyData = {\n    labels: ['Accuracy', 'Error'],\n    datasets: [\n      {\n        label: 'Prediction Accuracy',\n        data: [accuracy, 100 - accuracy],\n        backgroundColor: ['#2196f3', '#ff9800'],\n        hoverOffset: 4,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <div style={styles.header}>\n        <h1>Bitcoin Tracker with Dummy Data</h1>\n        <div style={styles.totalProfit}>\n          <h2 style={styles.fixedProfit}>\n            Total Profit: ${totalProfit.toLocaleString()}\n            <span style={{ color: isProfitIncreasing ? 'green' : 'red' }}>\n              {isProfitIncreasing ? ` (+${profitChange}) ↑` : ` (${profitChange}) ↓`}\n            </span>\n          </h2>\n        </div>\n      </div>\n\n      <div style={styles.container}>\n        <div style={styles.column}>\n          <h2>Bitcoin Price</h2>\n          <Line data={priceChartData} options={options} />\n\n          <h2>Bitcoin Volume</h2>\n          <Bar data={volumeChartData} options={options} />\n        </div>\n\n        <div style={styles.column}>\n          <h2>Trade History (Dummy) - Latest 15</h2>\n          <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\">\n            <thead>\n              <tr>\n                <th>Time</th>\n                <th>Price (USD)</th>\n                <th>Volume</th>\n                <th>Action</th> \n                <th>Result</th> \n              </tr>\n            </thead>\n            <tbody>\n              {tradeHistory.map((trade, index) => (\n                <tr key={index}>\n                  <td>{trade.time}</td>\n                  <td>{trade.price}</td>\n                  <td>{trade.volume}</td>\n                  <td>{trade.action}</td>\n                  <td>{trade.result}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        <div style={styles.column}>\n          <h2>Current Trend: {trend}</h2>\n          <p>최근 5개의 가격을 기반으로 분석된 결과: {trend}</p>\n\n          <h2>Profit Rate</h2>\n          <div style={styles.chartWrapper}>\n            <Doughnut data={profitRateData} />\n            <p style={styles.chartText}>{profitRate}%</p>\n          </div>\n\n          <h2>Prediction Accuracy</h2>\n          <div style={styles.chartWrapper}>\n            <Doughnut data={accuracyData} />\n            <p style={styles.chartText}>{accuracy}%</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingBottom: '20px',\n    borderBottom: '2px solid #ccc',\n  },\n  totalProfit: {\n    fontSize: '24px',\n    fontWeight: 'bold',\n  },\n  fixedProfit: {\n    display: 'inline-block',\n    width: '200px',\n    textAlign: 'right',\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    flexWrap: 'wrap',\n  },\n  column: {\n    flex: 1,\n    minWidth: '300px',\n    marginRight: '10px',\n    marginBottom: '20px',\n  },\n  chartWrapper: {\n    position: 'relative',\n    width: '300px',\n    height: '300px',\n    margin: '0 auto',\n  },\n  chartText: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    fontSize: '24px',\n    fontWeight: 'bold',\n  },\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}