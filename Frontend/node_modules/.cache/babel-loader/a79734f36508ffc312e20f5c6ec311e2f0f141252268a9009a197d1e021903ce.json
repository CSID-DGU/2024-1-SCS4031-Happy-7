{"ast":null,"code":"var _jsxFileName = \"/Users/lee-boseong/happy-coin/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [priceData, setPriceData] = useState([]); // 비트코인 가격을 저장할 배열\n  const [timeData, setTimeData] = useState([]); // 시간을 저장할 배열\n\n  useEffect(() => {\n    const fetchPrice = async () => {\n      const response = await fetch('https://api.binance.com/api/v3/ticker/price?symbol=BTCUSDT');\n      const data = await response.json();\n      setPriceData(prevPriceData => [...prevPriceData, data.price]);\n      setTimeData(prevTimeData => [...prevTimeData, new Date().toLocaleTimeString()]);\n    };\n    fetchPrice();\n    const interval = setInterval(fetchPrice, 100);\n    return () => clearInterval(interval);\n  }, []);\n  const chartData = {\n    labels: timeData,\n    // x축에 시간을 표시\n    datasets: [{\n      label: 'Bitcoin Price',\n      // 데이터 이름\n      data: priceData,\n      // y축에 비트코인 가격을 표시\n      fill: false,\n      borderColor: 'pink',\n      tension: 0.1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD589\\uBCF5\\uD574\\uC870 Bitcoin \\uD2B8\\uB808\\uCEE4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JuKCO7+WjJ3apIPSdlk4xQp6Itc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","App","_s","priceData","setPriceData","timeData","setTimeData","fetchPrice","response","fetch","data","json","prevPriceData","price","prevTimeData","Date","toLocaleTimeString","interval","setInterval","clearInterval","chartData","labels","datasets","label","fill","borderColor","tension","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lee-boseong/happy-coin/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nfunction App() {\n  const [priceData, setPriceData] = useState([]);  // 비트코인 가격을 저장할 배열\n  const [timeData, setTimeData] = useState([]);    // 시간을 저장할 배열\n\n  useEffect(() => {\n    const fetchPrice = async () => {\n      const response = await fetch('https://api.binance.com/api/v3/ticker/price?symbol=BTCUSDT');\n      const data = await response.json();\n      setPriceData((prevPriceData) => [...prevPriceData, data.price]);\n      setTimeData((prevTimeData) => [...prevTimeData, new Date().toLocaleTimeString()]);\n    };\n\n    fetchPrice();\n    const interval = setInterval(fetchPrice, 100);\n    return () => clearInterval(interval);\n  }, []);\n\n  const chartData = {\n    labels: timeData,  // x축에 시간을 표시\n    datasets: [\n      {\n        label: 'Bitcoin Price',  // 데이터 이름\n        data: priceData,  // y축에 비트코인 가격을 표시\n        fill: false,\n        borderColor: 'pink',\n        tension: 0.1\n      }\n    ]\n  };\n\n  return (\n    <div>\n      <h1>행복해조 Bitcoin 트레커</h1>\n      <Line data={chartData} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElBT,OAAO,CAACU,QAAQ,CAACT,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE/F,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EACjD,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAI;;EAEjDC,SAAS,CAAC,MAAM;IACd,MAAMoB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4DAA4D,CAAC;MAC1F,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCP,YAAY,CAAEQ,aAAa,IAAK,CAAC,GAAGA,aAAa,EAAEF,IAAI,CAACG,KAAK,CAAC,CAAC;MAC/DP,WAAW,CAAEQ,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC,CAAC;IACnF,CAAC;IAEDT,UAAU,CAAC,CAAC;IACZ,MAAMU,QAAQ,GAAGC,WAAW,CAACX,UAAU,EAAE,GAAG,CAAC;IAC7C,OAAO,MAAMY,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,SAAS,GAAG;IAChBC,MAAM,EAAEhB,QAAQ;IAAG;IACnBiB,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,eAAe;MAAG;MACzBb,IAAI,EAAEP,SAAS;MAAG;MAClBqB,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE,MAAM;MACnBC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC;EAED,oBACE3B,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBhC,OAAA,CAACX,IAAI;MAACsB,IAAI,EAAEU;IAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV;AAAC7B,EAAA,CApCQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}