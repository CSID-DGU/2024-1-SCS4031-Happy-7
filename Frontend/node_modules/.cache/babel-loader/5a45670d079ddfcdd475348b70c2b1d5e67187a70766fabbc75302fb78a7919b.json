{"ast":null,"code":"var _jsxFileName = \"/Users/lee-boseong/happy-coin/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [priceData, setPriceData] = useState([]);\n  const [timeData, setTimeData] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n  const [tradeHistory, setTradeHistory] = useState([]);\n  useEffect(() => {\n    const fetchDummyData = () => {\n      // 더미 가격 생성\n      const dummyPrice = (Math.random() * (60000 - 50000) + 50000).toFixed(2);\n      const currentTime = new Date().toLocaleTimeString();\n      setPriceData(prevPriceData => [...prevPriceData, dummyPrice]);\n      setTimeData(prevTimeData => [...prevTimeData, currentTime]);\n\n      // 가격이 59000 이상이면 알림 추가\n      if (dummyPrice > 59000) {\n        setAlerts(prevAlerts => [...prevAlerts, `High Price Alert: $${dummyPrice} at ${currentTime}`]);\n      }\n\n      // 더미 거래 기록 생성\n      const dummyTrade = {\n        price: dummyPrice,\n        volume: (Math.random() * 5).toFixed(2),\n        time: currentTime\n      };\n      setTradeHistory(prevHistory => [...prevHistory, dummyTrade]);\n    };\n    fetchDummyData();\n    const interval = setInterval(fetchDummyData, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  const chartData = {\n    labels: timeData,\n    datasets: [{\n      label: 'Bitcoin Price',\n      data: priceData,\n      fill: false,\n      borderColor: 'blue',\n      tension: 0.1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bitcoin Tracker with Dummy Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Price Alerts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: alerts.map((alert, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: alert\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Trade History (Dummy)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tradeHistory.map((trade, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Price: $\", trade.price, \", Volume: \", trade.volume, \", Time: \", trade.time]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"w2JDhYITV3iDZdK3CKQF4A5Kt3A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","App","_s","priceData","setPriceData","timeData","setTimeData","alerts","setAlerts","tradeHistory","setTradeHistory","fetchDummyData","dummyPrice","Math","random","toFixed","currentTime","Date","toLocaleTimeString","prevPriceData","prevTimeData","prevAlerts","dummyTrade","price","volume","time","prevHistory","interval","setInterval","clearInterval","chartData","labels","datasets","label","data","fill","borderColor","tension","children","fileName","_jsxFileName","lineNumber","columnNumber","map","alert","index","trade","_c","$RefreshReg$"],"sources":["/Users/lee-boseong/happy-coin/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nfunction App() {\n  const [priceData, setPriceData] = useState([]);\n  const [timeData, setTimeData] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n  const [tradeHistory, setTradeHistory] = useState([]);\n\n  useEffect(() => {\n    const fetchDummyData = () => {\n      // 더미 가격 생성\n      const dummyPrice = (Math.random() * (60000 - 50000) + 50000).toFixed(2);\n      const currentTime = new Date().toLocaleTimeString();\n\n      setPriceData((prevPriceData) => [...prevPriceData, dummyPrice]);\n      setTimeData((prevTimeData) => [...prevTimeData, currentTime]);\n\n      // 가격이 59000 이상이면 알림 추가\n      if (dummyPrice > 59000) {\n        setAlerts((prevAlerts) => [...prevAlerts, `High Price Alert: $${dummyPrice} at ${currentTime}`]);\n      }\n\n      // 더미 거래 기록 생성\n      const dummyTrade = {\n        price: dummyPrice,\n        volume: (Math.random() * 5).toFixed(2),\n        time: currentTime,\n      };\n      setTradeHistory((prevHistory) => [...prevHistory, dummyTrade]);\n    };\n\n    fetchDummyData();\n    const interval = setInterval(fetchDummyData, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const chartData = {\n    labels: timeData,\n    datasets: [\n      {\n        label: 'Bitcoin Price',\n        data: priceData,\n        fill: false,\n        borderColor: 'blue',\n        tension: 0.1,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <h1>Bitcoin Tracker with Dummy Data</h1>\n      <Line data={chartData} />\n\n      <div>\n        <h2>Price Alerts</h2>\n        <ul>\n          {alerts.map((alert, index) => (\n            <li key={index}>{alert}</li>\n          ))}\n        </ul>\n      </div>\n\n      <div>\n        <h2>Trade History (Dummy)</h2>\n        <ul>\n          {tradeHistory.map((trade, index) => (\n            <li key={index}>\n              Price: ${trade.price}, Volume: {trade.volume}, Time: {trade.time}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}