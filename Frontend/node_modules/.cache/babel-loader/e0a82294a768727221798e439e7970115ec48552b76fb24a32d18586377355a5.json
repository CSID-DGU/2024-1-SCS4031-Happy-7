{"ast":null,"code":"var _jsxFileName = \"/Users/lee-boseong/happy-coin/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, BarElement, LineElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [priceData, setPriceData] = useState([]);\n  const [timeData, setTimeData] = useState([]);\n  const [volumeData, setVolumeData] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n  const [tradeHistory, setTradeHistory] = useState([]); // 거래 기록 상태\n  const [trend, setTrend] = useState('상승세'); // 초기값은 상승세로 설정\n  const [totalProfit, setTotalProfit] = useState(5000); // 총수익 초기값\n  const [previousProfit, setPreviousProfit] = useState(5000); // 이전 수익값\n  const [profitChange, setProfitChange] = useState(0); // 수익의 변동폭\n  const [isProfitIncreasing, setIsProfitIncreasing] = useState(true); // 수익 증가 여부\n  const [accuracy, setAccuracy] = useState(85); // 예측 정확도 초기값\n  const [profitRate, setProfitRate] = useState(20); // 수익률 초기값\n\n  useEffect(() => {\n    const fetchDummyData = () => {\n      // 더미 데이터 업데이트\n      const dummyPrice = (Math.random() * (60000 - 50000) + 50000).toFixed(2);\n      const dummyVolume = (Math.random() * 100).toFixed(2);\n      const currentTime = new Date().toLocaleTimeString();\n\n      // 실시간으로 수익률과 정확도 변경\n      setProfitRate(Math.floor(Math.random() * 100)); // 0~100% 사이의 랜덤 수익률\n      setAccuracy(Math.floor(Math.random() * 100)); // 0~100% 사이의 랜덤 정확도\n\n      // 실시간으로 총수익 변경 (0~1000 사이 랜덤 수익 변화)\n      const newProfit = totalProfit + Math.floor(Math.random() * 200 - 100); // 총수익이 +/- 100 변동\n      setPreviousProfit(totalProfit); // 이전 총수익 저장\n      setTotalProfit(newProfit); // 새로운 총수익 설정\n\n      // 수익 변동폭 계산 및 상승/하락 여부 결정\n      const change = newProfit - previousProfit;\n      setProfitChange(change);\n      setIsProfitIncreasing(change >= 0); // 수익이 증가하는지 여부 판단\n\n      // 가격 데이터 및 시간 데이터 추가\n      setPriceData(prevPriceData => [...prevPriceData, dummyPrice]);\n      setTimeData(prevTimeData => [...prevTimeData, currentTime]);\n      setVolumeData(prevVolumeData => [...prevVolumeData, dummyVolume]);\n\n      // 거래 기록 생성 및 업데이트\n      const newTrade = {\n        time: currentTime,\n        price: dummyPrice,\n        volume: dummyVolume\n      };\n      setTradeHistory(prevHistory => {\n        const updatedHistory = [...prevHistory, newTrade];\n        return updatedHistory.length > 17 ? updatedHistory.slice(-17) : updatedHistory; // 최신 17개만 유지\n      });\n\n      // 트렌드 업데이트\n      const recentPrices = [...priceData, dummyPrice].slice(-5);\n      const priceDifference = recentPrices[recentPrices.length - 1] - recentPrices[0];\n      setTrend(priceDifference > 0 ? '상승세' : '하락세');\n    };\n    fetchDummyData();\n    const interval = setInterval(fetchDummyData, 2000); // 2초마다 데이터 갱신\n    return () => clearInterval(interval);\n  }, [priceData, timeData, volumeData, totalProfit, previousProfit]);\n  const priceChartData = {\n    labels: timeData,\n    datasets: [{\n      label: 'Bitcoin Price',\n      data: priceData,\n      fill: false,\n      borderColor: 'blue',\n      tension: 0.1\n    }]\n  };\n  const volumeChartData = {\n    labels: timeData,\n    datasets: [{\n      label: 'Bitcoin Volume',\n      data: volumeData,\n      backgroundColor: 'green'\n    }]\n  };\n  const profitRateData = {\n    labels: ['Profit', 'Loss'],\n    datasets: [{\n      label: 'Profit Rate',\n      data: [profitRate, 100 - profitRate],\n      // 수익률 및 손실 비율\n      backgroundColor: ['#4caf50', '#f44336'],\n      hoverOffset: 4\n    }]\n  };\n  const accuracyData = {\n    labels: ['Accuracy', 'Error'],\n    datasets: [{\n      label: 'Prediction Accuracy',\n      data: [accuracy, 100 - accuracy],\n      // 정확도 및 오류 비율\n      backgroundColor: ['#2196f3', '#ff9800'],\n      hoverOffset: 4\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bitcoin Tracker with Dummy Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.totalProfit,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Total Profit: $\", totalProfit, /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: isProfitIncreasing ? 'green' : 'red'\n            },\n            children: isProfitIncreasing ? ` (+${profitChange}) ↑` : ` (${profitChange}) ↓`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.column,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Bitcoin Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: priceChartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Bitcoin Volume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: volumeChartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.column,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Trade History (Dummy) - Latest 17\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          cellPadding: \"10\",\n          cellSpacing: \"0\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price (USD)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Volume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tradeHistory.map((trade, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: trade.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: trade.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: trade.volume\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.column,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Current Trend: \", trend]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uCD5C\\uADFC 5\\uAC1C\\uC758 \\uAC00\\uACA9\\uC744 \\uAE30\\uBC18\\uC73C\\uB85C \\uBD84\\uC11D\\uB41C \\uACB0\\uACFC: \", trend]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Profit Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.chartWrapper,\n          children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n            data: profitRateData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.chartText,\n            children: [profitRate, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Prediction Accuracy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.chartWrapper,\n          children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n            data: accuracyData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.chartText,\n            children: [accuracy, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0zuJmSqM896xM/SOOm3Oc/qRtrw=\");\n_c = App;\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    // 제목과 총수익을 양옆에 배치\n    alignItems: 'center',\n    paddingBottom: '20px',\n    // 아래와 간격을 유지\n    borderBottom: '2px solid #ccc' // 제목 하단에 경계선을 추가하여 시각적 구분\n  },\n  totalProfit: {\n    fontSize: '24px',\n    fontWeight: 'bold'\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    flexWrap: 'wrap'\n  },\n  column: {\n    flex: 1,\n    minWidth: '300px',\n    marginRight: '10px',\n    marginBottom: '20px'\n  },\n  chartWrapper: {\n    position: 'relative',\n    width: '300px',\n    // 도넛 차트 크기를 더 크게 설정\n    height: '300px',\n    margin: '0 auto'\n  },\n  chartText: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    // 중앙에 텍스트 배치\n    fontSize: '24px',\n    fontWeight: 'bold'\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Line","Bar","Doughnut","Chart","ChartJS","CategoryScale","LinearScale","PointElement","BarElement","LineElement","ArcElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","App","_s","priceData","setPriceData","timeData","setTimeData","volumeData","setVolumeData","alerts","setAlerts","tradeHistory","setTradeHistory","trend","setTrend","totalProfit","setTotalProfit","previousProfit","setPreviousProfit","profitChange","setProfitChange","isProfitIncreasing","setIsProfitIncreasing","accuracy","setAccuracy","profitRate","setProfitRate","fetchDummyData","dummyPrice","Math","random","toFixed","dummyVolume","currentTime","Date","toLocaleTimeString","floor","newProfit","change","prevPriceData","prevTimeData","prevVolumeData","newTrade","time","price","volume","prevHistory","updatedHistory","length","slice","recentPrices","priceDifference","interval","setInterval","clearInterval","priceChartData","labels","datasets","label","data","fill","borderColor","tension","volumeChartData","backgroundColor","profitRateData","hoverOffset","accuracyData","children","style","styles","header","fileName","_jsxFileName","lineNumber","columnNumber","color","container","column","border","cellPadding","cellSpacing","map","trade","index","chartWrapper","chartText","_c","display","justifyContent","alignItems","paddingBottom","borderBottom","fontSize","fontWeight","flexDirection","flexWrap","flex","minWidth","marginRight","marginBottom","position","width","height","margin","top","left","transform","$RefreshReg$"],"sources":["/Users/lee-boseong/happy-coin/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  BarElement,\n  LineElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\n\nfunction App() {\n  const [priceData, setPriceData] = useState([]);\n  const [timeData, setTimeData] = useState([]);\n  const [volumeData, setVolumeData] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n  const [tradeHistory, setTradeHistory] = useState([]); // 거래 기록 상태\n  const [trend, setTrend] = useState('상승세'); // 초기값은 상승세로 설정\n  const [totalProfit, setTotalProfit] = useState(5000); // 총수익 초기값\n  const [previousProfit, setPreviousProfit] = useState(5000); // 이전 수익값\n  const [profitChange, setProfitChange] = useState(0); // 수익의 변동폭\n  const [isProfitIncreasing, setIsProfitIncreasing] = useState(true); // 수익 증가 여부\n  const [accuracy, setAccuracy] = useState(85); // 예측 정확도 초기값\n  const [profitRate, setProfitRate] = useState(20); // 수익률 초기값\n\n  useEffect(() => {\n    const fetchDummyData = () => {\n      // 더미 데이터 업데이트\n      const dummyPrice = (Math.random() * (60000 - 50000) + 50000).toFixed(2);\n      const dummyVolume = (Math.random() * 100).toFixed(2);\n      const currentTime = new Date().toLocaleTimeString();\n\n      // 실시간으로 수익률과 정확도 변경\n      setProfitRate(Math.floor(Math.random() * 100)); // 0~100% 사이의 랜덤 수익률\n      setAccuracy(Math.floor(Math.random() * 100)); // 0~100% 사이의 랜덤 정확도\n\n      // 실시간으로 총수익 변경 (0~1000 사이 랜덤 수익 변화)\n      const newProfit = totalProfit + Math.floor(Math.random() * 200 - 100); // 총수익이 +/- 100 변동\n      setPreviousProfit(totalProfit); // 이전 총수익 저장\n      setTotalProfit(newProfit); // 새로운 총수익 설정\n\n      // 수익 변동폭 계산 및 상승/하락 여부 결정\n      const change = newProfit - previousProfit;\n      setProfitChange(change);\n      setIsProfitIncreasing(change >= 0); // 수익이 증가하는지 여부 판단\n\n      // 가격 데이터 및 시간 데이터 추가\n      setPriceData((prevPriceData) => [...prevPriceData, dummyPrice]);\n      setTimeData((prevTimeData) => [...prevTimeData, currentTime]);\n      setVolumeData((prevVolumeData) => [...prevVolumeData, dummyVolume]);\n\n      // 거래 기록 생성 및 업데이트\n      const newTrade = {\n        time: currentTime,\n        price: dummyPrice,\n        volume: dummyVolume,\n      };\n      setTradeHistory((prevHistory) => {\n        const updatedHistory = [...prevHistory, newTrade];\n        return updatedHistory.length > 17 ? updatedHistory.slice(-17) : updatedHistory; // 최신 17개만 유지\n      });\n\n      // 트렌드 업데이트\n      const recentPrices = [...priceData, dummyPrice].slice(-5);\n      const priceDifference = recentPrices[recentPrices.length - 1] - recentPrices[0];\n      setTrend(priceDifference > 0 ? '상승세' : '하락세');\n    };\n\n    fetchDummyData();\n    const interval = setInterval(fetchDummyData, 2000); // 2초마다 데이터 갱신\n    return () => clearInterval(interval);\n  }, [priceData, timeData, volumeData, totalProfit, previousProfit]);\n\n  const priceChartData = {\n    labels: timeData,\n    datasets: [\n      {\n        label: 'Bitcoin Price',\n        data: priceData,\n        fill: false,\n        borderColor: 'blue',\n        tension: 0.1,\n      },\n    ],\n  };\n\n  const volumeChartData = {\n    labels: timeData,\n    datasets: [\n      {\n        label: 'Bitcoin Volume',\n        data: volumeData,\n        backgroundColor: 'green',\n      },\n    ],\n  };\n\n  const profitRateData = {\n    labels: ['Profit', 'Loss'],\n    datasets: [\n      {\n        label: 'Profit Rate',\n        data: [profitRate, 100 - profitRate], // 수익률 및 손실 비율\n        backgroundColor: ['#4caf50', '#f44336'],\n        hoverOffset: 4,\n      },\n    ],\n  };\n\n  const accuracyData = {\n    labels: ['Accuracy', 'Error'],\n    datasets: [\n      {\n        label: 'Prediction Accuracy',\n        data: [accuracy, 100 - accuracy], // 정확도 및 오류 비율\n        backgroundColor: ['#2196f3', '#ff9800'],\n        hoverOffset: 4,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      {/* 상단 제목과 Total Profit를 나란히 배치 */}\n      <div style={styles.header}>\n        <h1>Bitcoin Tracker with Dummy Data</h1>\n        <div style={styles.totalProfit}>\n          <h2>\n            Total Profit: ${totalProfit} \n            <span style={{ color: isProfitIncreasing ? 'green' : 'red' }}>\n              {/* 등락폭 기호 표시 */}\n              {isProfitIncreasing ? ` (+${profitChange}) ↑` : ` (${profitChange}) ↓`}\n            </span>\n          </h2>\n        </div>\n      </div>\n\n      <div style={styles.container}>\n        <div style={styles.column}>\n          <h2>Bitcoin Price</h2>\n          <Line data={priceChartData} />\n\n          <h2>Bitcoin Volume</h2>\n          <Bar data={volumeChartData} />\n        </div>\n\n        <div style={styles.column}>\n          <h2>Trade History (Dummy) - Latest 17</h2>\n          <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\">\n            <thead>\n              <tr>\n                <th>Time</th>\n                <th>Price (USD)</th>\n                <th>Volume</th>\n              </tr>\n            </thead>\n            <tbody>\n              {tradeHistory.map((trade, index) => (\n                <tr key={index}>\n                  <td>{trade.time}</td>\n                  <td>{trade.price}</td>\n                  <td>{trade.volume}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        <div style={styles.column}>\n          <h2>Current Trend: {trend}</h2>\n          <p>최근 5개의 가격을 기반으로 분석된 결과: {trend}</p>\n\n          <h2>Profit Rate</h2>\n          <div style={styles.chartWrapper}>\n            <Doughnut data={profitRateData} />\n            <p style={styles.chartText}>{profitRate}%</p>\n          </div>\n\n          <h2>Prediction Accuracy</h2>\n          <div style={styles.chartWrapper}>\n            <Doughnut data={accuracyData} />\n            <p style={styles.chartText}>{accuracy}%</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between', // 제목과 총수익을 양옆에 배치\n    alignItems: 'center',\n    paddingBottom: '20px', // 아래와 간격을 유지\n    borderBottom: '2px solid #ccc', // 제목 하단에 경계선을 추가하여 시각적 구분\n  },\n  totalProfit: {\n    fontSize: '24px',\n    fontWeight: 'bold',\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    flexWrap: 'wrap',\n  },\n  column: {\n    flex: 1,\n    minWidth: '300px',\n    marginRight: '10px',\n    marginBottom: '20px',\n  },\n  chartWrapper: {\n    position: 'relative',\n    width: '300px',  // 도넛 차트 크기를 더 크게 설정\n    height: '300px',\n    margin: '0 auto',\n  },\n  chartText: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)', // 중앙에 텍스트 배치\n    fontSize: '24px',\n    fontWeight: 'bold',\n  },\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}