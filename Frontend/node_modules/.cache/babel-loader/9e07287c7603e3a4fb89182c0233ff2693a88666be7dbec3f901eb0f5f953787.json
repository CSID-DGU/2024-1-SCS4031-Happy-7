{"ast":null,"code":"var _jsxFileName = \"/Users/lee-boseong/happy-coin/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, BarElement, LineElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [priceData, setPriceData] = useState([]);\n  const [timeData, setTimeData] = useState([]);\n  const [volumeData, setVolumeData] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n  const [tradeHistory, setTradeHistory] = useState([]);\n  const [trend, setTrend] = useState('상승세'); // 초기값은 상승세로 설정\n  const [totalProfit, setTotalProfit] = useState(5000); // 총수익 초기값\n  const [accuracy, setAccuracy] = useState(85); // 예측 정확도 초기값\n  const [profitRate, setProfitRate] = useState(20); // 수익률 초기값\n\n  useEffect(() => {\n    const fetchDummyData = () => {\n      // 더미 가격 및 거래량 생성\n      const dummyPrice = (Math.random() * (60000 - 50000) + 50000).toFixed(2);\n      const dummyVolume = (Math.random() * 100).toFixed(2);\n      const currentTime = new Date().toLocaleTimeString();\n      setPriceData(prevPriceData => [...prevPriceData, dummyPrice]);\n      setTimeData(prevTimeData => [...prevTimeData, currentTime]);\n      setVolumeData(prevVolumeData => [...prevVolumeData, dummyVolume]);\n\n      // 최근 5개의 가격을 기반으로 트렌드 분석\n      const recentPrices = [...priceData, dummyPrice].slice(-5); // 최근 5개 데이터\n      const priceDifference = recentPrices[recentPrices.length - 1] - recentPrices[0];\n      setTrend(priceDifference > 0 ? '상승세' : '하락세');\n\n      // 가격이 59000 이상이면 알림 추가\n      if (dummyPrice > 59000) {\n        setAlerts(prevAlerts => [...prevAlerts, `High Price Alert: $${dummyPrice} at ${currentTime}`]);\n      }\n\n      // 더미 거래 기록 생성\n      const dummyTrade = {\n        price: dummyPrice,\n        volume: dummyVolume,\n        time: currentTime\n      };\n      setTradeHistory(prevHistory => {\n        const updatedHistory = [...prevHistory, dummyTrade];\n        return updatedHistory.length > 17 ? updatedHistory.slice(-17) : updatedHistory;\n      });\n    };\n    fetchDummyData();\n    const interval = setInterval(fetchDummyData, 2000);\n    return () => clearInterval(interval);\n  }, [priceData]);\n  const priceChartData = {\n    labels: timeData,\n    datasets: [{\n      label: 'Bitcoin Price',\n      data: priceData,\n      fill: false,\n      borderColor: 'blue',\n      tension: 0.1\n    }]\n  };\n  const volumeChartData = {\n    labels: timeData,\n    datasets: [{\n      label: 'Bitcoin Volume',\n      data: volumeData,\n      backgroundColor: 'green'\n    }]\n  };\n  const profitRateData = {\n    labels: ['Profit', 'Loss'],\n    datasets: [{\n      label: 'Profit Rate',\n      data: [profitRate, 100 - profitRate],\n      // 수익률 및 손실 비율\n      backgroundColor: ['#4caf50', '#f44336'],\n      hoverOffset: 4\n    }]\n  };\n  const accuracyData = {\n    labels: ['Accuracy', 'Error'],\n    datasets: [{\n      label: 'Prediction Accuracy',\n      data: [accuracy, 100 - accuracy],\n      // 정확도 및 오류 비율\n      backgroundColor: ['#2196f3', '#ff9800'],\n      hoverOffset: 4\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bitcoin Tracker with Dummy Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.column,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Bitcoin Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: priceChartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Bitcoin Volume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: volumeChartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.column,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Trade History (Dummy) - Latest 17\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          cellPadding: \"10\",\n          cellSpacing: \"0\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price (USD)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Volume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tradeHistory.map((trade, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: trade.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: trade.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: trade.volume\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.column,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Current Trend: \", trend]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uCD5C\\uADFC 5\\uAC1C\\uC758 \\uAC00\\uACA9\\uC744 \\uAE30\\uBC18\\uC73C\\uB85C \\uBD84\\uC11D\\uB41C \\uACB0\\uACFC: \", trend]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Profit Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.chartWrapper,\n          children: /*#__PURE__*/_jsxDEV(Doughnut, {\n            data: profitRateData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Prediction Accuracy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.chartWrapper,\n          children: /*#__PURE__*/_jsxDEV(Doughnut, {\n            data: accuracyData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Total Profit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", totalProfit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GTDAjeykjY457rCV+bd4bs+cb/I=\");\n_c = App;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    // 세 개의 컬럼을 가로로 배치\n    justifyContent: 'flex-start',\n    // 컬럼들을 시작점에서부터 배치하여 간격 최소화\n    alignItems: 'flex-start',\n    flexWrap: 'wrap' // 화면 크기가 작아지면 세로로 배치\n  },\n  column: {\n    width: '30%',\n    // 각 컬럼의 너비를 30%로 고정하여 간격 최소화\n    marginRight: '10px',\n    // 컬럼 간의 간격을 줄이기 위해 마진을 최소화\n    marginBottom: '20px' // 세로 간격 유지\n  },\n  chartWrapper: {\n    width: '200px',\n    // 도넛 차트의 너비를 제한\n    height: '200px',\n    // 도넛 차트의 높이를 제한\n    margin: '0 auto' // 차트를 가운데로 정렬\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Line","Bar","Doughnut","Chart","ChartJS","CategoryScale","LinearScale","PointElement","BarElement","LineElement","ArcElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","App","_s","priceData","setPriceData","timeData","setTimeData","volumeData","setVolumeData","alerts","setAlerts","tradeHistory","setTradeHistory","trend","setTrend","totalProfit","setTotalProfit","accuracy","setAccuracy","profitRate","setProfitRate","fetchDummyData","dummyPrice","Math","random","toFixed","dummyVolume","currentTime","Date","toLocaleTimeString","prevPriceData","prevTimeData","prevVolumeData","recentPrices","slice","priceDifference","length","prevAlerts","dummyTrade","price","volume","time","prevHistory","updatedHistory","interval","setInterval","clearInterval","priceChartData","labels","datasets","label","data","fill","borderColor","tension","volumeChartData","backgroundColor","profitRateData","hoverOffset","accuracyData","children","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","container","column","border","cellPadding","cellSpacing","map","trade","index","chartWrapper","_c","display","flexDirection","justifyContent","alignItems","flexWrap","width","marginRight","marginBottom","height","margin","$RefreshReg$"],"sources":["/Users/lee-boseong/happy-coin/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  BarElement,\n  LineElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\n\nfunction App() {\n  const [priceData, setPriceData] = useState([]);\n  const [timeData, setTimeData] = useState([]);\n  const [volumeData, setVolumeData] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n  const [tradeHistory, setTradeHistory] = useState([]);\n  const [trend, setTrend] = useState('상승세'); // 초기값은 상승세로 설정\n  const [totalProfit, setTotalProfit] = useState(5000); // 총수익 초기값\n  const [accuracy, setAccuracy] = useState(85); // 예측 정확도 초기값\n  const [profitRate, setProfitRate] = useState(20); // 수익률 초기값\n\n  useEffect(() => {\n    const fetchDummyData = () => {\n      // 더미 가격 및 거래량 생성\n      const dummyPrice = (Math.random() * (60000 - 50000) + 50000).toFixed(2);\n      const dummyVolume = (Math.random() * 100).toFixed(2);\n      const currentTime = new Date().toLocaleTimeString();\n\n      setPriceData((prevPriceData) => [...prevPriceData, dummyPrice]);\n      setTimeData((prevTimeData) => [...prevTimeData, currentTime]);\n      setVolumeData((prevVolumeData) => [...prevVolumeData, dummyVolume]);\n\n      // 최근 5개의 가격을 기반으로 트렌드 분석\n      const recentPrices = [...priceData, dummyPrice].slice(-5);  // 최근 5개 데이터\n      const priceDifference = recentPrices[recentPrices.length - 1] - recentPrices[0];\n      setTrend(priceDifference > 0 ? '상승세' : '하락세');\n\n      // 가격이 59000 이상이면 알림 추가\n      if (dummyPrice > 59000) {\n        setAlerts((prevAlerts) => [...prevAlerts, `High Price Alert: $${dummyPrice} at ${currentTime}`]);\n      }\n\n      // 더미 거래 기록 생성\n      const dummyTrade = {\n        price: dummyPrice,\n        volume: dummyVolume,\n        time: currentTime,\n      };\n      setTradeHistory((prevHistory) => {\n        const updatedHistory = [...prevHistory, dummyTrade];\n        return updatedHistory.length > 17 ? updatedHistory.slice(-17) : updatedHistory;\n      });\n    };\n\n    fetchDummyData();\n    const interval = setInterval(fetchDummyData, 2000);\n    return () => clearInterval(interval);\n  }, [priceData]);\n\n  const priceChartData = {\n    labels: timeData,\n    datasets: [\n      {\n        label: 'Bitcoin Price',\n        data: priceData,\n        fill: false,\n        borderColor: 'blue',\n        tension: 0.1,\n      },\n    ],\n  };\n\n  const volumeChartData = {\n    labels: timeData,\n    datasets: [\n      {\n        label: 'Bitcoin Volume',\n        data: volumeData,\n        backgroundColor: 'green',\n      },\n    ],\n  };\n\n  const profitRateData = {\n    labels: ['Profit', 'Loss'],\n    datasets: [\n      {\n        label: 'Profit Rate',\n        data: [profitRate, 100 - profitRate], // 수익률 및 손실 비율\n        backgroundColor: ['#4caf50', '#f44336'],\n        hoverOffset: 4,\n      },\n    ],\n  };\n\n  const accuracyData = {\n    labels: ['Accuracy', 'Error'],\n    datasets: [\n      {\n        label: 'Prediction Accuracy',\n        data: [accuracy, 100 - accuracy], // 정확도 및 오류 비율\n        backgroundColor: ['#2196f3', '#ff9800'],\n        hoverOffset: 4,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <h1>Bitcoin Tracker with Dummy Data</h1>\n\n      {/* Flexbox로 세 개의 컬럼을 가로로 배치 */}\n      <div style={styles.container}>\n        \n        {/* 첫 번째 컬럼: Bitcoin Price와 Bitcoin Volume 차트를 세로로 배치 */}\n        <div style={styles.column}>\n          <h2>Bitcoin Price</h2>\n          <Line data={priceChartData} />\n\n          <h2>Bitcoin Volume</h2>\n          <Bar data={volumeChartData} />\n        </div>\n\n        {/* 두 번째 컬럼: Trade History 테이블 */}\n        <div style={styles.column}>\n          <h2>Trade History (Dummy) - Latest 17</h2>\n          <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\">\n            <thead>\n              <tr>\n                <th>Time</th>\n                <th>Price (USD)</th>\n                <th>Volume</th>\n              </tr>\n            </thead>\n            <tbody>\n              {tradeHistory.map((trade, index) => (\n                <tr key={index}>\n                  <td>{trade.time}</td>\n                  <td>{trade.price}</td>\n                  <td>{trade.volume}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        {/* 세 번째 컬럼: Current Trend 및 차트 추가 */}\n        <div style={styles.column}>\n          <h2>Current Trend: {trend}</h2>\n          <p>최근 5개의 가격을 기반으로 분석된 결과: {trend}</p>\n\n          {/* 수익률 차트 */}\n          <h2>Profit Rate</h2>\n          <div style={styles.chartWrapper}>\n            <Doughnut data={profitRateData} />\n          </div>\n\n          {/* 예측 정확도 차트 */}\n          <h2>Prediction Accuracy</h2>\n          <div style={styles.chartWrapper}>\n            <Doughnut data={accuracyData} />\n          </div>\n\n          {/* 총수익 */}\n          <h2>Total Profit</h2>\n          <p>${totalProfit}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'row', // 세 개의 컬럼을 가로로 배치\n    justifyContent: 'flex-start', // 컬럼들을 시작점에서부터 배치하여 간격 최소화\n    alignItems: 'flex-start',\n    flexWrap: 'wrap', // 화면 크기가 작아지면 세로로 배치\n  },\n  column: {\n    width: '30%', // 각 컬럼의 너비를 30%로 고정하여 간격 최소화\n    marginRight: '10px', // 컬럼 간의 간격을 줄이기 위해 마진을 최소화\n    marginBottom: '20px', // 세로 간격 유지\n  },\n  chartWrapper: {\n    width: '200px',  // 도넛 차트의 너비를 제한\n    height: '200px', // 도넛 차트의 높이를 제한\n    margin: '0 auto', // 차트를 가운데로 정렬\n  },\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}